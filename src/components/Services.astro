---
import Icon, { IconName as Icons } from "./Icon.astro";
import type { IconName } from "./Icon.astro";
import { Theme } from "../layouts/index.astro";
import { Image } from "astro:assets";

import img1 from "../assets/images/img-1.png";
import img2 from "../assets/images/img-2.png";
import img3 from "../assets/images/img-3.png";
import img4 from "../assets/images/img-4.png";
import img5 from "../assets/images/img-5.png";
import img6 from "../assets/images/img-6.png";
import img7 from "../assets/images/img-7.png";
import img8 from "../assets/images/img-8.png";

interface Props {
	heading: string;
	services: {
		title: string;
		icon?: IconName;
		bullets: {
			title: string;
			content?: string;
		}[];
	}[];
	info?: string;
	theme: Theme;
	imageAlt: string
}

const { services, heading, info, theme = Theme.Administracja, imageAlt }: Props = Astro.props;
---

<section id="oferta">
	<h2>{heading}</h2>
	{
		services.map(({ title, bullets, icon }) => (
			<div>
				<header>
					{icon && <Icon icon={icon} width={48} height={48} />}
				</header>
				<h3>{title}</h3>
				<ul>
					{bullets.map(({ title, content }) => (
						<li>
							{content
							? (
								<h5>{title}</h5>
								<p>{content}</p>
							)
							: (<span>{title}</span>)}
						</li>
					))}
				</ul>
			</div>
		))
	}
	{
		info && (
			<footer>
				<Icon icon={Icons.Info} width={32} height={32} />
				<strong>{info}</strong>
			</footer>
		)
	}
</section>
<aside>
	{
		Theme.Administracja === theme
		? (
			<Image src={img8} alt={imageAlt} />
			<Image src={img4} alt={imageAlt} />
			<Image src={img6} alt={imageAlt} />
			<Image src={img2} alt={imageAlt} />
		)
		: (
			<Image src={img7} alt={imageAlt} />
			<Image src={img3} alt={imageAlt} />
			<Image src={img5} alt={imageAlt} />
			<Image src={img1} alt={imageAlt} />
		)
	}
</aside>

<style>
	section {
		padding: var(--spacing--4) var(--spacing--container);
		scroll-margin-top: var(--spacing--4);
		display: flex;
		flex-direction: column;
		gap: var(--spacing--1)
	}

	section div {
		display: flex;
		flex-wrap: wrap;
		column-gap: var(--spacing--3);
		row-gap: var(--spacing--1);
		padding-top: var(--spacing--3);
		padding-bottom: var(--spacing--4);
	}

	section div:not(:first-of-type) {
		border-top: 1px solid var(--services--border-color);
	}

	section header {
		flex: 0 0 100%;
	}

	section header :global(svg) {
		height: auto;
		width: clamp(40px, 3.725vw, 48px);
	}

	section h3 {
		flex: 1 1 33%;
		margin-bottom: var(--spacing--2);
	}

	section ul {
		display: flex;
		flex-direction: column;
		list-style: none;
		gap: var(--spacing--2);
		flex: 1 0 60%;
	}

	section ul:has(p) {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: var(--spacing--3);
	}

	@media (max-width: 900px) {
		section ul:has(p) {
			grid-template-columns: 1fr;
		}
	}

	li span {
		display: flex;
		gap:var(--spacing--1);
	}

	li span::before {
		content: '\2014';
		color: var(--services--bullet-color);
	}

	li p {
		color: var(--services--text-color);
		margin-top: var(--spacing--1);
	}

	section footer {
		display: flex;
		gap: var(--spacing--2);
		align-items: center;
	}

	section footer :global(svg) {
		flex-shrink: 0;
	}

	aside {
		display: flex;
		justify-content: center;
		align-items: start;
		width: 100%;
		overflow: hidden;
	}

	aside img {
		min-width: 33%;
		height: auto;
	}

	@media (max-width: 700px) {
		section h3 {
			flex: 0 0 100%;
		}
	}

	@media (max-width: 600px) {
		aside {
			flex-wrap: wrap;
		}

		aside img {
			width: 50%;
		}
	}
</style>