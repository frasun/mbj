---
import Logo from "./Logo.astro";
import Icon, { IconName as Icons } from "./Icon.astro";
import type { Theme } from "../layouts/index.astro";

interface Props {
	siteName: string;
	seeAlso: {
		title: string;
		logo: Theme;
		link: string;
	};
}

const { siteName, seeAlso }: Props = Astro.props;
const FOOTER = {
	title:
		"Zapraszamy do kontaktu w celu omówienia szczegółów i dostosowania oferty do Twoich potrzeb",
	phone: "+48=502=123=123",
	email: "aaa+++aaa.pl",
	address: "ul. Stefana Jaracza 2, 91-123 Łódź",
	socialMedia: [
		{
			title: "fb",
			link: "",
			icon: Icons.SocialFb,
		},
		{
			title: "ig",
			link: "",
			icon: Icons.SocialIg,
		},
	],
	copyText: "Wszelkie prwa zastrzeżone",
};
---

<footer id="kontakt">
	<address>
		<h4>{FOOTER.title}</h4>
		<contact-link data-number={FOOTER.phone}>
			<a href="#">
				<Icon icon={Icons.Phone} width={32} height={32} />
			</a>
		</contact-link>
		<contact-link data-email={FOOTER.email}>
			<a href="#">
				<Icon icon={Icons.Mention} width={32} height={32} />
			</a>
		</contact-link>
		<p>{FOOTER.address}</p>
	</address>
	<ul>
		{
			FOOTER.socialMedia.map(({ title, link, icon }) => (
				<li>
					<a href={link} aria-label={title}>
						<Icon icon={icon} width={32} height={32} />
					</a>
				</li>
			))
		}
	</ul>
	<aside>
		<h5>Zobacz również</h5>
		<a href={`${import.meta.env.SITE}/${seeAlso.link}`} target="_blank">
			<Logo type={seeAlso.logo} />
			<strong>{seeAlso.title}</strong>
		</a>
	</aside>
	<p>&copy; {siteName} {new Date().getFullYear()} {FOOTER.copyText}</p>
</footer>

<style>
	footer {
		padding: var(--spacing--3) var(--spacing--container) var(--spacing--2);
		scroll-margin-top: var(--header--height);
		background-color: var(--footer--background-color);
		display: flex;
		flex-direction: column;
		gap: var(--spacing--2);
		position: relative;
		z-index: 1;
	}

	ul {
		list-style: none;
	}

	address {
		font-style: normal;
		display: flex;
		flex-direction: column;
		gap: var(--spacing--1);
		font-size: var(--font-size--7);
	}

	address h4 {
		margin-bottom: var(--spacing--1);
	}

	address p {
		margin-top: var(--spacing--2);
	}

	a {
		display: flex;
		gap: var(--spacing--2);
		align-items: center;
	}

	address a {
		gap: min(2vw, var(--spacing--2));
	}

	contact-link[data-number] a {
		font-size: var(--font-size--10);
	}

	contact-link[data-email] a {
		font-size: var(--font-size--5);
	}

	contact-link a {
		font-weight: 700;
	}

	ul {
		display: flex;
		gap: var(--spacing--2);
	}

	footer > p {
		text-align: center;
		font-size: var(--font-size--9);
		flex: 0 0 100%;
		color: var(--footer--copy-color);
	}

	footer > div {
		display: flex;
		justify-content: space-between;
	}

	aside a {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		row-gap: 5px;
		line-height: var(--line-height--2);
	}

	aside h5 {
		margin-bottom: var(--spacing--1);
		font-size: var(--font-size--5);
	}

	@media (min-width: 800px) {
		footer {
			display: grid;
		}

		address {
			grid-area: 1 / 1 / span 2 / 2;
		}

		address h4 {
			max-width: 600px;
		}

		ul {
			grid-area: 2 / 2 / 2 / 2;
			align-self: end;
			justify-self: end;
		}

		aside {
			grid-area: 1 / 2 / 1 / 2;
			justify-self: end;
		}

		aside strong {
			max-width: 200px;
			font-size: var(--font-size--6);
		}

		footer > p {
			grid-area: 3 / span 2;
		}
	}

	@media (max-width: 800px) {
		ul {
			justify-content: center;
			padding: var(--spacing--1);
		}

		aside {
			display: flex;
			flex-direction: column;
			align-items: center;
			padding: var(--spacing--1);
			text-align: center;
		}

		aside a {
			flex-direction: column;
		}
	}
</style>

<script>
	class ContactLink extends HTMLElement {
		number: string | undefined;
		email: string | undefined;
		linkElement: HTMLAnchorElement | null | undefined;
		linkText: string | undefined;

		connectedCallback() {
			this.number = this.dataset.number;
			this.email = this.dataset.email;
			this.linkElement = this.querySelector("a");
			this.linkText = undefined;

			if (!this.linkElement) return;

			if (this.number) {
				this.linkText = this.number.replaceAll("=", " ");
			} else if (this.email) {
				this.linkText = this.email.replaceAll("+++", "@");
			}

			document.addEventListener(
				"DOMContentLoaded",
				this.fillContactInfo.bind(this)
			);
			this.linkElement.addEventListener("click", this.handleClick.bind(this));
		}

		fillContactInfo() {
			if (this.linkText && this.linkElement) {
				this.linkElement.innerHTML += `<span>${this.linkText}</span>`;
			}
		}

		handleClick(e: Event) {
			e.preventDefault();
			let link;

			if (this.number) {
				link = `tel:${this.linkText}`;
			} else if (this.email) {
				link = `mailto:${this.linkText}`;
			}

			if (link) {
				window.open(link, "_self");
			}
		}
	}

	customElements.define("contact-link", ContactLink);
</script>
